name: 'Notarize'
description: 'Notarize signed binaries'

inputs:
  apple-dev-email:
    description: 'email of the apple dev'
    required: true
  apple-dev-team:
    description: 'Apple team id'
    required: true
  apple-app-password:
    description: 'GRIS apple developper password'
    required: true
  app-path:
    description: 'Folder in which the .zip is'
    required: true
  app-name:
    description: 'Name of the app folder without file suffix (file should be a .zip)'
    required: true
  app-file-suffix:
    description: 'Suffix of the app (.app, .vst, .whatever) with the dot included'
outputs:
  notarized-app-folder:
    description: 'Folder in which the notarized app is'
    value: 'Builds/notarized/'
runs:
  using: "composite"
  - name: Notarize
    env:
      APPLE_APP_PASSWORD: ${{ inputs.apple-app-password }}
      APP_PATH: ${{ inputs.app-path }}
      APP_NAME: ${{ inputs.app-name }}
      APP_FILE_SUFFIX: ${{ inputs.app-file-suffix }}
      APPLE_TEAM_ID: ${{ inputs.apple-dev-team }}
      APPLE_DEV_EMAIL : ${{ inputs.apple-dev-email }}
    shell: bash
    run: |
      set -x
      security unlock-keychain -p github build.keychain

      # Create zip for notarization

      zip -r $APP_PATH$APP_NAME.zip $APP_PATH$APP_NAME$APP_FILE_SUFFIX

      # Submit for notarization
      xcrun notarytool submit $APP_PATH$APP_NAME.zip \
          --team-id $APPLE_TEAM_ID \
          --apple-id $APPLE_DEV_EMAIL \
          --password "$APPLE_APP_PASSWORD" \
          --progress \
          --wait

      # Staple the notarization
      xcrun stapler staple $APP_PATH$APP_NAME$APP_SUFFIX
      xcrun stapler validate $APP_PATH$APP_NAME$APP_SUFFIX
      mkdir -p Builds/notarized
      mv $APP_PATH$APP_NAME$APP_SUFFIX Builds/notarized
